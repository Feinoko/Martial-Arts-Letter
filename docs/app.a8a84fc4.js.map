{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","js/fadeIn.js","js/focusImage.js","js/textInteraction.js","js/dummyClass.js","app.js"],"names":["seqFadeIn","count","itemsToFade","Array","from","document","getElementsByClassName","repeater","setInterval","length","style","cssText","clearInterval","zoomLevel","transitionDuration","z_index","images","i","attachTransitionAnim","addEventListener","e","flow","recess","zoomIn","transform","zIndex","zoomOut","transition","grayOthers","splice","indexOf","filter","unGray","refill","textInteraction","constructor","letterDelay","delayBeforeStartRemoveText","textappearDelay","quoteText","getElementById","textContent","fuse","calcRemoveTextDelay","fluidRemoveText","ELquoteText","setTimeout","timer","textAppear","removeAuthor","substring","quoteLength","text","delay","console","log","charAt","author","authorAfter","classList","add","addNewAuthor","opacity","Dummy","var1","var2","firstFunc","secondFunc","window","ELquote","effectIn","forEach","line","backgroundColor","ELauthor","color","effectOut","settings","textInter"],"mappings":"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","file":"app.a8a84fc4.js","sourceRoot":"..\\src","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/* =====================\r\n\r\nModule name : fadeIn\r\n\r\nAuthor : JLeCorre\r\nEmail : jonathanlecorre@gmail.com\r\nVersion : 1.0.0\r\nDate of issue : 26.01.2021\r\n\r\nDescription : fades in all DOM elements with the class 'will-fade'\r\n\r\nInstructions : add the fadeIn function as callback in any eventListener (ex: DOMContentLoaded if you want DOM to fade in on page load) by adding a class 'fade-in' containing a transition opacity, which you must define yourself in CSS\r\n\r\n========================*/\r\n\r\nexport default function seqFadeIn() {\r\n  \r\n  let count = 0; // init count\r\n\r\n  // config vars\r\n  const delay = 50; // interval between fades in\r\n  const random = false; // shuffles the array of DOM elems so that fade in is not linear but scattered (artistic effect)\r\n    \r\n    let itemsToFade = Array.from(document.getElementsByClassName('will-fade'));\r\n\r\n    // gets randomized if random param = true\r\n    if (random) {\r\n      itemsToFade = itemsToFade.sort(() => 0.5 - Math.random());\r\n    }\r\n\r\n      const repeater = setInterval(function() {\r\n        // run this at each interval, will stop iterating when count is equal / above # of elements to fade in\r\n        if (count < itemsToFade.length) {\r\n          itemsToFade[count].style.cssText = 'opacity: 1';\r\n          count ++;\r\n          // console.log(`ping # ${count}`); // for debug\r\n        } else {\r\n          // exit the function once all items have faded in, to avoid set Interval running forever\r\n          clearInterval(repeater);\r\n        }\r\n        // console.log(count); // debug, to check that function does stop running after all elements have faded in\r\n      }, delay);\r\n}\r\n\r\n\r\n\r\n","/* =====================\r\n\r\nModule name : focusImage\r\n\r\nAuthor : Jonathan Le Corre\r\nEmail : jonathanlecorre@gmail.com\r\nVersion : 1.0.0\r\nDate of release (latest release): 29.01.2021\r\n\r\nDescription : brings focus to the hovered/focused image / media element & grays out all the other ones\r\n\r\nInstructions : add class 'image-focus-blur' to the elements you wish to receive the effect\r\n\r\n========================*/\r\n\r\n// config\r\nconst zoomLevel = 1.08; // scale value\r\nconst transitionDuration = '1s'; // time to zoom on hover\r\nconst z_index = 500; // to always appear on top in case of overlap. You should not have to touch this\r\n\r\n// get image\r\nlet images = Array.from(document.getElementsByClassName('image-focus-blur'));\r\n\r\n//event handler\r\n\r\n// surveys all images\r\nfor (let i of images) {\r\n  \r\n  attachTransitionAnim(i);\r\n\r\n  // triggers event on all images on mouseover / mouseout\r\n  i.addEventListener('mouseenter', function(e) {flow(i);});\r\n  i.addEventListener('mouseout', function(e) {recess(i);});\r\n\r\n  // triggers same event on focus (accessibility)\r\n  i.addEventListener('focus', function(e) {flow(i);});\r\n  i.addEventListener('blur', function(e) {recess(i);});                         \r\n\r\n}\r\n\r\n\r\n/* ========\r\n functions \r\n ========== */\r\n\r\n// zoom in img on hover\r\nfunction zoomIn(i) { // 'i' for image\r\n  i.style.transform = `scale(${zoomLevel})`;\r\n  i.style.zIndex += z_index; // to always appear on top in case of overlap\r\n}\r\n\r\nfunction zoomOut(i) {\r\n  i.style.transform = 'scale(1)';\r\n  i.style.zIndex -= z_index; // resetting z-index\r\n}\r\n\r\n// transition animation\r\nfunction attachTransitionAnim(i) {\r\n\r\n  i.style.transition = `all ${transitionDuration} ease`;\r\n}\r\n\r\n// grays out all other elements\r\nfunction grayOthers(i) {\r\n\r\n  // remove the hovered image index to apply b & w effect to all but hovered\r\n  images.splice(images.indexOf(i), 1);\r\n\r\n  for (let i of images) {\r\n    i.style.transition = `all ${transitionDuration} ease`; // seems transition does not work properly if not re-adding it\r\n    i.style.filter = 'grayscale(1)';\r\n  }\r\n}\r\n\r\nfunction unGray() {\r\n  for (let i of images) {\r\n    i.style.transition = `all ${transitionDuration} ease`; // seems transition does not work properly if not re-adding it\r\n    i.style.filter = 'grayscale(0)';\r\n  }\r\n}\r\n\r\nfunction refill() {\r\n  // re-add the removed index\r\n  images = Array.from(document.getElementsByClassName('image-focus-blur'));\r\n}\r\n\r\n// combining all functions for readability\r\n\r\nfunction flow(i) {\r\n  grayOthers(i);\r\n  attachTransitionAnim(i);\r\n  zoomIn(i);\r\n}\r\n\r\nfunction recess(i) {\r\n  zoomOut(i); // revert to original size\r\n  unGray(i);\r\n  refill(); // re-fill array of image (re-add the removed index)\r\n}\r\n","/* =====================\r\n\r\nModule name : textInteraction\r\n\r\nAuthor : Jonathan Le Corre\r\nEmail : jonathanlecorre@gmail.com\r\nVersion : 1.0.0\r\nDate of release (latest release): \r\n\r\nDescription : when entering text, removes it to introduce new text\r\n\r\nInstructions : \r\n\r\nSteps :\r\n-on hover, progressive remove text (like a backspace animation)\r\n-show another msg with type anim : \"patience is the mother of all virtues\"\r\n-make 3 dots appears slowly below text area, to test user's patience\r\n-make text fade in : you are not without virtue, you may enter the realm of wisdom\r\n-add a button, on click, open modal, containing wisdom quotes from famous personalities (fetch API)\r\n\r\n========================*/\r\n\r\nclass textInteraction {\r\n\r\n  constructor(letterDelay, delayBeforeStartRemoveText) { /* removeTextDelay, delayBeforeFiringTextAppear) { */\r\n    this.letterDelay = letterDelay;\r\n    this.delayBeforeStartRemoveText = delayBeforeStartRemoveText;\r\n    this.textappearDelay = 120;\r\n    this.quoteText = document.getElementById('quote-text').textContent; // to save the original saying in a var\r\n    this.fuse = true;\r\n  }\r\n\r\n  // calculate removeTextDelay\r\n  calcRemoveTextDelay() {\r\n    return (this.letterDelay * document.getElementById('quote-text').textContent.length + this.delayBeforeStartRemoveText);\r\n  }\r\n\r\n  // progressively removing text\r\n  fluidRemoveText() {\r\n\r\n    const ELquoteText = document.getElementById('quote-text');\r\n\r\n    if (this.fuse) {\r\n      this.fuse = false;\r\n      let quoteText = ELquoteText.textContent;\r\n      // wait a bit before start removing\r\n      setTimeout(() => {\r\n        // loop that removes the last char at each iteration, with a set delay\r\n        const timer = setInterval(() => { // you must declare the setInterval in expression (with a const), in order to be able to clearInterval \r\n          // exit loop when string is empty\r\n          if (quoteText.length === 0) {\r\n            this.textAppear();\r\n            this.removeAuthor();\r\n            clearInterval(timer);\r\n          };\r\n          // remove the last char\r\n          quoteText = quoteText.substring(0, quoteText.length - 1);\r\n\r\n          // reassign the string without the last char\r\n          ELquoteText.textContent = quoteText;\r\n        }, this.letterDelay); // delay between each call (setInterval)\r\n      }, this.delayBeforeStartRemoveText);  // delay of the setTimeout\r\n    }\r\n\r\n\r\n\r\n  };\r\n\r\n  textAppear() {\r\n\r\n    const ELquoteText = document.getElementById('quote-text');\r\n    const quoteText = `Patience is the mother of all virtues...`;\r\n    const quoteLength = quoteText.length;\r\n    let text = '';\r\n    let i = 0;\r\n\r\n\r\n    // wait for previous to complete (i know... problem with promises, i cant get them to work yet)\r\n    const delay = this.calcRemoveTextDelay() + 1000; // wait for 1st function then wait another 2s\r\n    setTimeout(() => {\r\n      // loop that adds a char at each iteration, with a set delay\r\n      const repeater = setInterval(() => {\r\n        // exit loop when string is complete\r\n        if (text.length === quoteLength-1) {\r\n          console.log('clearing interval');\r\n          clearInterval(repeater);\r\n        };\r\n        // remove the last char\r\n        ELquoteText.textContent += quoteText.charAt(i);\r\n        text = ELquoteText.textContent;\r\n        i++\r\n      }, this.textappearDelay*2);\r\n    }, delay);\r\n  }\r\n\r\n  removeAuthor() {\r\n\r\n    // get the element that will be faded out\r\n    const author = document.getElementById('quote-author');\r\n    // get the element which will do the crossing effect before the fadeout\r\n    const authorAfter = document.getElementById('author-cross-line');\r\n    setTimeout(() => {\r\n      authorAfter.classList.add('quote-author-cross-anim');\r\n      author.style.transition = 'opacity 2s ease 1s';\r\n      author.classList.add('fadeout-quote-author');\r\n      setTimeout(this.addNewAuthor, 10000);\r\n    }, 300);\r\n  }\r\n\r\n  addNewAuthor() {\r\n    const author = document.getElementById('quote-author');\r\n    author.textContent = `Any Wise Soul`;\r\n    author.style.opacity = '1';\r\n  }\r\n\r\n};\r\n\r\nexport { textInteraction as default };","class Dummy {\r\n\r\n  constructor(var1, var2) {\r\n    this.var1 = var1;\r\n    this.var2 = var2;\r\n  }\r\n\r\n  firstFunc() {\r\n    console.log(`called 1st func, value of var1 is ${this.var1} and var2 is ${this.var2}`);\r\n  }\r\n\r\n  secondFunc() {\r\n    this.firstFunc();\r\n    console.log('called 2nd func');\r\n  }\r\n\r\n}\r\n\r\nexport { Dummy as default };","import './css/styles.scss';\r\nimport 'regenerator-runtime/runtime' // required when using async/await with parcel\r\nimport seqFadeIn from './js/fadeIn';\r\nimport './js/focusImage';\r\n\r\nimport textInteraction from './js/textInteraction';\r\nimport dummy from './js/dummyClass';\r\n\r\n\r\n// tile fade in effect\r\nwindow.addEventListener('DOMContentLoaded', seqFadeIn);\r\n\r\n\r\n\r\n/* ================\r\nphilosophical quote hover effect\r\n================== */ \r\n//#region quote\r\n\r\nconst ELquote = document.getElementById('philo-quote');\r\n\r\n// effect should trigger whenever user enters the whole div, not just the quote text\r\nELquote.addEventListener('mouseenter', effectIn);\r\nELquote.addEventListener('mouseleave', effectOut);\r\n\r\n// event handler function\r\nfunction effectIn() {\r\n  const ELlines = Array.from(document.getElementsByClassName('quote-line'));\r\n  // apply to quote lines\r\n  ELlines.forEach(function(line) {\r\n    line.style.transition = 'background-color 1s ease';\r\n    line.style.backgroundColor = 'rgb(135, 26, 26)';\r\n  });\r\n  // apply to author name also\r\n  const ELauthor = document.getElementById('quote-author');\r\n  ELauthor.style.transition = 'color 1s ease';\r\n  ELauthor.style.color = 'rgb(135, 26, 26)';\r\n}\r\n\r\nfunction effectOut() {\r\n  const ELlines = Array.from(document.getElementsByClassName('quote-line'));\r\n  // apply to quote lines\r\n  ELlines.forEach(function(line) {\r\n    line.style.transition = 'background-color 1s ease';\r\n    line.style.backgroundColor = '#A7A7A7';\r\n  });\r\n  // apply to author name also\r\n  const ELauthor = document.getElementById('quote-author');\r\n  ELauthor.style.transition = 'color 1s ease';\r\n  ELauthor.style.color = '#A7A7A7';\r\n}\r\n//#endregion\r\n\r\n// ==philo quote event handler==\r\n\r\nconst settings = [20,1500,120]; // just to text spread (...) operator to use array as function arguments\r\nconst textInter = new textInteraction(...settings);\r\n\r\ntextInter.calcRemoveTextDelay();\r\n\r\ndocument.getElementById('quote-text').addEventListener('mouseenter', () => {\r\n  textInter.fluidRemoveText();\r\n});\r\n\r\n\r\n\r\n"]}